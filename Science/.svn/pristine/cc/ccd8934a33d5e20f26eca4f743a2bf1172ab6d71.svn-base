package com.fujitsu.ttf.yd.controller;

import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.fujitsu.ttf.yd.entity.ResultEntity;
import com.fujitsu.ttf.yd.service.IStaffService;
import com.fujitsu.ttf.yd.vo.management.StaffVo;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

/**
 * 
* @ClassName: StaffController 
* @Description: 管理模块 员工管理 
* @author shik.jy
* @date 2019年10月11日 下午4:28:57 
*
 */
@Api(value = "员工管理", tags = "员工管理")
@RestController
@RequestMapping("/staff")
public class StaffController {
	
	@Autowired
	private IStaffService staffService;
	
	@PostMapping("/add")
	@ApiOperation(value = "添加员工", notes = "")
	@ResponseBody
//	@ApiImplicitParam(name = "Authorization", value = "Token", required = true, dataType = "String", paramType = "header")
	public ResultEntity<?> addStaff(StaffVo staffVo) {
		return staffService.addStaff(staffVo);
	}

	@DeleteMapping("/delete")
	@ApiOperation(value = "删除员工", notes = "")
	@ResponseBody
//	@ApiImplicitParam(name = "Authorization", value = "Token", required = true, dataType = "String", paramType = "header")
	public ResultEntity<?> deleteStaff(StaffVo staffVo) {
		return staffService.deleteStaff(staffVo);
	}
	
	@PostMapping("/update")
	@ApiOperation(value = "更新员工", notes = "")
	@ResponseBody
//	@ApiImplicitParam(name = "Authorization", value = "Token", required = true, dataType = "String", paramType = "header")
	public ResultEntity<?> updateStaff(StaffVo staffVo) {
		return staffService.updateStaff(staffVo);
	}
	
	@GetMapping("/get")
	@ApiOperation(value = "查询员工", notes = "")
	@ResponseBody
//	@ApiImplicitParam(name = "Authorization", value = "Token", required = true, dataType = "String", paramType = "header")
	public Map<String,Object> getStaff(StaffVo staffVo) {
		return staffService.getStaff(staffVo);
	}
}
