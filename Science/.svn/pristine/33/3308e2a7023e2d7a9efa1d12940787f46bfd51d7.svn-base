package com.fujitsu.ttf.yd.service.impl;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.Map;

import org.apache.pdfbox.io.MemoryUsageSetting;
import org.apache.pdfbox.multipdf.PDFMergerUtility;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.springframework.stereotype.Service;

import com.fujitsu.ttf.yd.service.PDFService;
import com.fujitsu.ttf.yd.utils.Constants;
import com.fujitsu.ttf.yd.utils.SendEmailUtils;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Image;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.AcroFields;
import com.itextpdf.text.pdf.BaseFont;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfCopy;
import com.itextpdf.text.pdf.PdfImportedPage;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfStamper;

/**
 * @author wuyu
 *
 */
@Service
public class PDFMergeServiceImpl implements PDFService {

	@Override
	public void PDFMerge(List<String> list,String targetAddress) {
		PDDocument doc = null;
		//String workpath = "E:/test/";
		long currentTimeMillis = System.currentTimeMillis();
		//实例化PDF工具类
        PDFMergerUtility mergerUtil = new PDFMergerUtility();
        //设置合并后的文件
        mergerUtil.setDestinationFileName(Constants.MERGE_PATH + currentTimeMillis + ".pdf");
		for(int i=0;i<list.size();i++) {
			File file = new File(Constants.WORK_PATH + list.get(i));
            try {
				doc = PDDocument.load(file);
				//添加要合并的文件
	            mergerUtil.addSource(file);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		//合并
        try {
			mergerUtil.mergeDocuments(MemoryUsageSetting.setupMainMemoryOnly());
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				doc.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
        // 发送邮件
        SendEmailUtils.sendEmail(currentTimeMillis,targetAddress);
	}

	@Override
	public void addMerge(Map<String, Object> data, String fileOutPath) {
		try {
            BaseFont bf = BaseFont.createFont("c://windows//fonts//simsun.ttc,1", BaseFont.IDENTITY_H,
                    BaseFont.EMBEDDED);
            FileOutputStream out = new FileOutputStream(fileOutPath);// 输出流
            // TODO
            PdfReader reader = new PdfReader("C:\\Users\\Administrator\\Desktop\\cover_end.pdf");// 读取pdf模板
            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            PdfStamper stamper = new PdfStamper(reader, bos);
            stamper.setFormFlattening(true);
            AcroFields form = stamper.getAcroFields();
            // 文字类的内容处理
            Map<String, String> datemap = (Map<String, String>) data.get("datemap");
            form.addSubstitutionFont(bf);
            for (String key : datemap.keySet()) {
                String value = datemap.get(key);
                form.setField(key, value);
            }
            // 图片类的内容处理
            Map<String, String> imgmap = (Map<String, String>) data.get("imgmap");
            for (String key : imgmap.keySet()) {
                String value = imgmap.get(key);
                String imgpath = value;
                int pageNo = form.getFieldPositions(key).get(0).page;
                Rectangle signRect = form.getFieldPositions(key).get(0).position;
                float x = signRect.getLeft();
                float y = signRect.getBottom();
                // 根据路径读取图片
                Image image = Image.getInstance(imgpath);
                // 获取图片页面
                PdfContentByte under = stamper.getOverContent(pageNo);
                // 图片大小自适应
                image.scaleToFit(signRect.getWidth(), signRect.getHeight());
                // 添加图片
                image.setAbsolutePosition(x, y);
                under.addImage(image);
            }
            stamper.setFormFlattening(true);// 如果为false，生成的PDF文件可以编辑，如果为true，生成的PDF文件不可以编辑
            stamper.close();
            Document doc = new Document();
            PdfCopy copy = new PdfCopy(doc, out);
            doc.open();
            int pageNum = reader.getNumberOfPages();
             for(int i = 1;i <= pageNum;i++){
                 PdfImportedPage importPage = copy.getImportedPage(new PdfReader(bos.toByteArray()), i);
                 copy.addPage(importPage);
             }
            doc.close();
        } catch (IOException e) {
            System.out.println(e);
        } catch (DocumentException e) {
            System.out.println(e);
        }
	}

}
